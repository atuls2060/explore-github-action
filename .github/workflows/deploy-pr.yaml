name: Deploy Pull Request

on:
  workflow_call:
    inputs:
      pr_number:
        description: 'Pull Request Number'
        required: true
        type: number
      branch_name:
        description: 'Source Branch Name'
        required: true
        type: string
      pr_state:
        description: 'Pull Request State (e.g., open, closed)'
        required: true
        type: string

jobs:
  deploy-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up environment name
        id: env
        run: echo "env_name=sp-${{ inputs.pr_number }}" >> $GITHUB_ENV

      - name: Create Environment
        id: create-env
        if: ${{ inputs.pr_state == 'opened' }}
        run: echo "creating environment ${{ inputs.pr_state }}"

      - name: Deploy to Environment
        run: |
          echo "Deploying to environment: ${{ inputs.pr_state }} ${{ env.env_name }}.atulsingh.dev"

  create-comment:
    runs-on: ubuntu-latest
    needs: deploy-pr

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
          fetch-depth: 1 
        

      - name: Read the single file in the folder
        id: read_file
       
        run: |
          # Fetch all commits of the PR branch and get the base commit if needed
          base_commit="${{ github.event.pull_request.base.sha }}"
          pr_commit="${{ github.sha }}"
          
          # Get a list of files in the specific folder between the base commit and PR commit
          files=$(git diff --name-only $base_commit $pr_commit | grep '^folder_name/')
          
          # Check if any files exist in that folder
          if [ -z "$files" ]; then
            echo "No files found in the folder."
          else
            echo "Files in folder_name:"
            echo "$files"
          fi

      - uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `The testing environment is live! You can [view it here](https://${{ env.env_name }}.example22.com/${{ env.MODIFIED_FILENAME }}).`
            })
