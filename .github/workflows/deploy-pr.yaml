name: Deploy Pull Request

on:
  workflow_call:
    inputs:
      pr_number:
        description: 'Pull Request Number'
        required: true
        type: number
      branch_name:
        description: 'Source Branch Name'
        required: true
        type: string
      pr_state:
        description: 'Pull Request State (e.g., open, closed)'
        required: true
        type: string

jobs:
  deploy-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up environment name
        id: env
        run: echo "env_name=sp-${{ inputs.pr_number }}" >> $GITHUB_ENV

      - name: Create Environment
        id: create-env
        if: ${{ inputs.pr_state == 'opened' }}
        run: echo "creating environment ${{ inputs.pr_state }}"

      - name: Deploy to Environment
        run: |
          echo "Deploying to environment: ${{ inputs.pr_state }} ${{ env.env_name }}.atulsingh.dev"

  create-comment:
    runs-on: ubuntu-latest
    needs: deploy-pr

    steps:
      - name: Check changed files starting with 'src/routes'
        uses: tj-actions/changed-files@v45
        id: files
        with:
          files: 'src.routes/**'  # Pattern to match files starting with 'src.routes'
    
      - name: Replace . with / and set output variable
        run: |
          # Get the changed files and replace '.' with '/'
          CHANGED_FILES="${{ steps.files.outputs.changed_files }}"
          if [ -z "$CHANGED_FILES" ]; then
            echo "No files starting with 'src.routes' were found."
            echo "MODIFIED_FILENAME=" >> $GITHUB_ENV  # Set an empty MODIFIED_FILENAME
          else
            # Replace '.' with '/' in the paths
            UPDATED_FILES=$(echo "$CHANGED_FILES" | sed 's/\./\//g')
            echo "MODIFIED_FILENAME=$UPDATED_FILES" >> $GITHUB_ENV  # Set the updated filenames in the environment
            echo "Changed files starting with 'src/routes': $UPDATED_FILES"
          fi
      
      - name: Display MODIFIED_FILENAME
        run: |
          echo "Stored Modified Filename: $MODIFIED_FILENAME"
    
    
      - name: Find Comment
        uses: peter-evans/find-comment@v1
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: The testing environment is live!
      
      - name: Create comment
        if: steps.fc.outputs.comment-id == ''
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            The testing environment is live! You can [view it here](https://${{ env.env_name }}.example22.com/${{ env.MODIFIED_FILENAME }}).
          reactions: rocket

      - name: Update comment
        if: steps.fc.outputs.comment-id != ''
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          body: |
           The testing environment is live! You can [view it here](https://${{ env.env_name }}.example22.com/${{ env.MODIFIED_FILENAME }}).
          edit-mode: replace
